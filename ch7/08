// solution to a.
// arrobj.cpp
#include <iostream>
#include <string>

const int Seasons = 4;
const char* Snames[Seasons] =
{ "Spring", "Summer", "Fall", "Winter" };

void fill(double* pa);
void show(double* da);

int main()
{
	double expenses[Seasons];
	fill(expenses);
	show(expenses);
	return 0;
}


void fill(double* pa)
{
	using namespace std;
	for (int i = 0; i < Seasons; i++)
	{
		cout << "Enter " << Snames[i] << " expenses: ";
		cin >> pa[i];
	}
}

void show(double* da)
{
	using namespace std;
	double total = 0.0;
	cout << "\nEXPENSES\n";
	for (int i = 0; i < Seasons; i++)
	{
		cout << Snames[i] << ": $" << da[i] << endl;
		total += da[i];
	}
	cout << "Total Expenses: $" << total << endl;
}



// solution to b.
// arrobj.cpp
#include <iostream>
#include <string>

const int Seasons = 4;
const char* Snames[Seasons] =
{ "Spring", "Summer", "Fall", "Winter" };

struct expenses
{
	double out;
};

void fill(expenses(*pa)[Seasons]);
void show(expenses pa[Seasons]);

int main()
{
	expenses ex[Seasons];
	fill(&ex);
	show(ex);
	return 0;
}


void fill(expenses(*pa)[Seasons])
{
	using namespace std;
	for (int i = 0; i < Seasons; i++)
	{
		cout << "Enter " << Snames[i] << " expenses: ";
		cin >> (*pa)[i].out;
	}
}

void show(expenses pa[Seasons])
{
	using namespace std;
	double total = 0.0;
	cout << "\nEXPENSES\n";
	for (int i = 0; i < Seasons; i++)
	{
		cout << Snames[i] << ": $" << pa[i].out << endl;
		total += pa[i].out;
	}
	cout << "Total Expenses: $" << total << endl;
}

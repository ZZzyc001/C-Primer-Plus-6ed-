// tempover.cpp
#include <iostream>

template <typename T>
T SumArray(T arr[], int n);

template <typename T>
T SumArray(T* arr[], int n);

struct debts
{
	char name[50];
	double amount;
};

int main()
{
	using namespace std;
	int things[6] = { 13, 31, 103, 301, 310, 130 };
	struct debts me_E[3] =
	{
		{"Ima Wolfe", 2400.0},
		{"Ura Foxe", 1300.0},
		{"Iby Stout", 1800.0}
	};
	double* pd[3];

	for (int i = 0; i < 3; i++)
		pd[i] = &me_E[i].amount;

	cout << "Mr.E's sum of things:\n";
	cout << SumArray(things, 6) << endl;
	cout << "Mr.E's debts:\n";
	cout << SumArray(pd, 3) << endl;
	return 0;
}

template<typename T>
T SumArray(T arr[], int n)
{
	std::cout << "Template A:\n";
	T sum = 0;
	for (int i = 0; i < n; ++i)
		sum += arr[i];
	return sum;
}

template<typename T>
T SumArray(T* arr[], int n)
{
	std::cout << "Template B:\n";
	T sum = 0;
	for (int i = 0; i < n; ++i)
		sum += *arr[i];
	return sum;
}

#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <algorithm>

struct Store
{
	std::ostream& os;
	Store(std::ostream& _os) : os(_os) {}
	void operator()(const std::string& s)
	{
		std::size_t len = s.size();
		os.write((char*)&len, sizeof(std::size_t));
		os.write(s.data(), len);
	}
};

void ShowStr(const std::string& s);
void GetStrs(std::istream& is, std::vector<std::string>& s);

int main()
{
	using namespace std;
	vector<string> vostr;
	string temp;

	cout << "Enter strings (empty line to quit):\n";
	while (getline(cin, temp) && temp[0] != '\0')
		vostr.push_back(temp);
	cout << "Here is your input.\n";
	for_each(vostr.begin(), vostr.end(), ShowStr);

	ofstream fout("string.dat", ios_base::out | ios_base::binary);
	for_each(vostr.begin(), vostr.end(), Store(fout));
	fout.close();

	vector<string> vistr;
	ifstream fin("string.dat", ios_base::in | ios_base::binary);
	if (!fin.is_open())
	{
		cerr << "Could not open file for input.\n";
		exit(EXIT_FAILURE);
	}
	GetStrs(fin, vistr);
	cout << "\nHere are the strings read from the file:\n";
	for_each(vistr.begin(), vistr.end(), ShowStr);

	return 0;
}

void ShowStr(const std::string& s)
{
	std::cout << s << std::endl;
}

void GetStrs(std::istream& is, std::vector<std::string>& s)
{
	std::size_t len;
	while (is.read((char*)&len, sizeof(std::size_t)))
	{
		std::string st;
		char ch;
		for (int i = 0; i < len; ++i)
		{
			is.read((char*)&ch, sizeof(char));
			st.push_back(ch);
		}
		s.push_back(st);
	}
}
